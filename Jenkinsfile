pipeline {
    agent any

    stages {
        stage('Preparar entorno limpio') {
            steps {
                sh '''
                    echo ğŸ§¯ Deteniendo contenedores anteriores...
                    docker stop flask-app mysql-db || true

                    echo ğŸ—‘ Eliminando contenedores anteriores...
                    docker rm flask-app mysql-db || true

                    echo ğŸ”§ Eliminando red de pruebas si estÃ¡ vacÃ­a...
                    docker network rm pipeline_net || true
                '''
            }
        }

        stage('Build y levantar entorno para pruebas') {
            steps {
                sh '''
                    echo ğŸ”§ Levantando entorno para pruebas...
                    docker-compose -p pipeline-test up -d --build
                '''
            }
        }

        stage('Ejecutar pruebas') {
            steps {
                sh '''
                    echo ğŸ§ª Ejecutando pruebas...
                    # aquÃ­ va tu comando de pruebas, por ejemplo:
                    docker exec flask-app pytest || exit 1
                '''
            }
        }

        stage('Limpiar entorno Docker') {
            steps {
                sh '''
                    echo ğŸ§¹ Deteniendo entorno de pruebas...
                    docker-compose -p pipeline-test down || true
                '''
            }
        }

        stage('Desplegar en producciÃ³n') {
            steps {
                sh '''
                    echo "ğŸ”§ Levantando entorno para pruebas (solo web y db)..."
                    docker-compose -p pipeline-test up -d --build web db
                '''
            }
        }
    }
}
